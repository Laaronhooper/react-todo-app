{"version":3,"sources":["components/InputField.tsx","components/SingleTodo.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["InputField","todo","setTodo","handleAdd","inputRef","useRef","className","onSubmit","e","current","blur","type","placeholder","value","ref","onChange","target","SingleTodo","index","todos","setTodos","useState","edit","setEdit","editTodo","setEditTodo","useEffect","focus","draggableId","id","toString","provided","snapshot","preventDefault","map","handleEdit","draggableProps","dragHandleProps","innerRef","isDragging","isDone","onClick","filter","TodoList","completedTodos","setCompletedTodos","droppableId","isDraggingOver","droppableProps","App","onDragEnd","result","destination","source","console","log","add","active","complete","splice","Date","now","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAmCeA,EA1BqB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAC9CC,EAAWC,iBAAyB,MAE1C,OACE,qCACA,sBACEC,UAAU,QACVC,SAAU,SAACC,GAAO,IAAD,EACfL,EAAUK,GACV,UAAAJ,EAASK,eAAT,SAAkBC,QAJtB,SAOE,uBACEC,KAAK,OACLC,YAAY,eACZC,MAAOZ,EACPa,IAAKV,EACLW,SAAU,SAACP,GAAD,OAAON,EAAQM,EAAEQ,OAAOH,QAClCP,UAAU,iBAGd,qE,8BCyDWW,EA3EV,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOjB,EAA4B,EAA5BA,KAAMkB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACjBC,oBAAkB,GADD,mBAClCC,EADkC,KAC5BC,EAD4B,OAETF,mBAAiBpB,EAAKA,MAFb,mBAElCuB,EAFkC,KAExBC,EAFwB,KAInCrB,EAAWC,iBAAyB,MAC1CqB,qBAAU,WAAO,IAAD,EACd,UAAAtB,EAASK,eAAT,SAAkBkB,UACjB,CAACL,IAsBJ,OACE,cAAC,IAAD,CAAWM,YAAa3B,EAAK4B,GAAGC,WAAYZ,MAAOA,EAAnD,SACG,SAACa,EAAUC,GAAX,OACC,2DACEzB,SAAU,SAACC,GAAD,OAxBC,SAACA,EAAoBqB,GACtCrB,EAAEyB,iBACFb,EACED,EAAMe,KAAI,SAACjC,GAAD,OAAWA,EAAK4B,KAAOA,EAAZ,2BAAsB5B,GAAtB,IAA4BA,KAAMuB,IAAavB,MAEtEsB,GAAQ,GAmBeY,CAAW3B,EAAGP,EAAK4B,MAChCE,EAASK,gBACTL,EAASM,iBAHf,IAIEvB,IAAKiB,EAASO,SACdhC,UAAS,wBAAmB0B,EAASO,WAAa,OAAS,IAL7D,UAOGjB,EACC,uBACET,MAAOW,EACPT,SAAU,SAACP,GAAD,OAAOiB,EAAYjB,EAAEQ,OAAOH,QACtCP,UAAU,sBACVQ,IAAKV,IAELH,EAAKuC,OACP,mBAAGlC,UAAU,sBAAb,SAAoCL,EAAKA,OAEzC,sBAAMK,UAAU,sBAAhB,SAAuCL,EAAKA,OAE9C,gCACE,sBACEK,UAAU,OACVmC,QAAS,WACFnB,GAASrB,EAAKuC,QACjBjB,GAASD,IAJf,SAQE,cAAC,IAAD,MAEF,sBAAMhB,UAAU,OAAOmC,QAAS,kBA7CpBZ,EA6CuC5B,EAAK4B,QA5ChET,EAASD,EAAMuB,QAAO,SAACzC,GAAD,OAAUA,EAAK4B,KAAOA,MADzB,IAACA,GA6CZ,SACE,cAAC,IAAD,MAEF,sBAAMvB,UAAU,OAAOmC,QAAS,kBA5CtBZ,EA4CuC5B,EAAK4B,QA3C9DT,EACED,EAAMe,KAAI,SAACjC,GAAD,OACRA,EAAK4B,KAAOA,EAAZ,2BAAsB5B,GAAtB,IAA4BuC,QAASvC,EAAKuC,SAAWvC,MAHxC,IAAC4B,GA4CV,SACE,cAAC,IAAD,iBCVCc,EAxDmB,SAAC,GAK5B,IAJLxB,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAwB,EAEI,EAFJA,eACAC,EACI,EADJA,kBAEA,OACE,sBAAKvC,UAAU,YAAf,UACE,cAAC,IAAD,CAAWwC,YAAY,YAAvB,SACG,SAACf,EAAUC,GAAX,OACC,8CACE1B,UAAS,gBAAW0B,EAASe,eAAiB,aAAe,IAC7DjC,IAAKiB,EAASO,UACVP,EAASiB,gBAHf,cAKE,sBAAM1C,UAAU,iBAAhB,kBALF,OAMGa,QANH,IAMGA,OANH,EAMGA,EAAOe,KAAI,SAACjC,EAAMiB,GAAP,OACV,cAAC,EAAD,CACEA,MAAOA,EACPC,MAAOA,EACPlB,KAAMA,EAENmB,SAAUA,GADLnB,EAAK4B,OAIbE,EAASnB,mBAIhB,cAAC,IAAD,CAAWkC,YAAY,cAAvB,SACG,SAACf,EAAUC,GAAX,OACC,8CACElB,IAAKiB,EAASO,UACVP,EAASiB,gBAFf,IAGE1C,UAAS,iBACP0B,EAASe,eAAiB,eAAiB,UAJ/C,UAOE,sBAAMzC,UAAU,iBAAhB,6BAPF,OAQGsC,QARH,IAQGA,OARH,EAQGA,EAAgBV,KAAI,SAACjC,EAAMiB,GAAP,OACnB,cAAC,EAAD,CACEA,MAAOA,EACPC,MAAOyB,EACP3C,KAAMA,EAENmB,SAAUyB,GADL5C,EAAK4B,OAIbE,EAASnB,uBCgBPqC,EArEO,WAAO,IAAD,EACF5B,mBAAiB,IADf,mBACnBpB,EADmB,KACbC,EADa,OAEAmB,mBAAsB,IAFtB,mBAEnBF,EAFmB,KAEZC,EAFY,OAGkBC,mBAAsB,IAHxC,mBAGnBuB,EAHmB,KAGHC,EAHG,KAqD1B,OACE,cAAC,IAAD,CAAiBK,UAxCD,SAACC,GAAwB,IACjCC,EAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,OAIrB,GAFAC,QAAQC,IAAIJ,GAEPC,IAKHA,EAAYN,cAAgBO,EAAOP,aACnCM,EAAYlC,QAAUmC,EAAOnC,OAF/B,CAOA,IAAIsC,EACAC,EAAStC,EACTuC,EAAWd,EAEY,cAAvBS,EAAOP,aACTU,EAAMC,EAAOJ,EAAOnC,OACpBuC,EAAOE,OAAON,EAAOnC,MAAO,KAE5BsC,EAAME,EAASL,EAAOnC,OACtBwC,EAASC,OAAON,EAAOnC,MAAO,IAIA,cAA5BkC,EAAYN,YACdW,EAAOE,OAAOP,EAAYlC,MAAO,EAAGsC,GAEpCE,EAASC,OAAOP,EAAYlC,MAAO,EAAGsC,GAGxCX,EAAkBa,GAClBtC,EAASqC,KAIT,SACE,sBAAKnD,UAAU,MAAf,UACE,sBAAMA,UAAU,UAAhB,sBACA,cAAC,EAAD,CAAYL,KAAMA,EAAMC,QAASA,EAASC,UApD9B,SAACK,GACjBA,EAAEyB,iBAEEhC,IACFmB,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEU,GAAI+B,KAAKC,MAAO5D,OAAMuC,QAAQ,MACpDtC,EAAQ,QAgDN,cAAC,EAAD,CACEiB,MAAOA,EACPC,SAAUA,EACVwB,eAAgBA,EAChBC,kBAAmBA,UChE7BiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.78885462.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\nimport \"../css/App.css\";\n\ninterface props {\n  todo: string;\n  setTodo: React.Dispatch<React.SetStateAction<string>>;\n  handleAdd: (e: React.FormEvent) => void;\n}\n\nconst InputField: React.FC<props> = ({ todo, setTodo, handleAdd }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  return (\n    <>\n    <form\n      className=\"input\"\n      onSubmit={(e) => {\n        handleAdd(e);\n        inputRef.current?.blur();\n      }}\n      >\n      <input\n        type=\"text\"\n        placeholder=\"Enter a Task\"\n        value={todo}\n        ref={inputRef}\n        onChange={(e) => setTodo(e.target.value)}\n        className=\"input__box\"\n        />\n      </form>\n    <p>Click to search, Enter to submit</p>\n  </>\n  );\n};\n\nexport default InputField;\n","import React, { useEffect, useState } from \"react\";\nimport { useRef } from \"react\";\nimport { AiFillEdit, AiFillDelete } from \"react-icons/ai\";\nimport { MdDone } from \"react-icons/md\";\nimport { Todo } from \"../models/models\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst SingleTodo: React.FC<{\n  index: number;\n  todo: Todo;\n  todos: Array<Todo>;\n  setTodos: React.Dispatch<React.SetStateAction<Array<Todo>>>;\n}> = ({ index, todo, todos, setTodos }) => {\n  const [edit, setEdit] = useState<boolean>(false);\n  const [editTodo, setEditTodo] = useState<string>(todo.todo);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, [edit]);\n\n  const handleEdit = (e: React.FormEvent, id: number) => {\n    e.preventDefault();\n    setTodos(\n      todos.map((todo) => (todo.id === id ? { ...todo, todo: editTodo } : todo))\n    );\n    setEdit(false);\n  };\n\n  const handleDelete = (id: number) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleDone = (id: number) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, isDone: !todo.isDone } : todo\n      )\n    );\n  };\n\n  return (\n    <Draggable draggableId={todo.id.toString()} index={index}>\n      {(provided, snapshot) => (\n        <form\n          onSubmit={(e) => handleEdit(e, todo.id)}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          className={`todos__single ${snapshot.isDragging ? \"drag\" : \"\"}`}\n        >\n          {edit ? (\n            <input\n              value={editTodo}\n              onChange={(e) => setEditTodo(e.target.value)}\n              className=\"todos__single--text\"\n              ref={inputRef}\n            />\n          ) : todo.isDone ? (\n            <s className=\"todos__single--text\">{todo.todo}</s>\n          ) : (\n            <span className=\"todos__single--text\">{todo.todo}</span>\n          )}\n          <div>\n            <span\n              className=\"icon\"\n              onClick={() => {\n                if (!edit && !todo.isDone) {\n                  setEdit(!edit);\n                }\n              }}\n            >\n              <AiFillEdit />\n            </span>\n            <span className=\"icon\" onClick={() => handleDelete(todo.id)}>\n              <AiFillDelete />\n            </span>\n            <span className=\"icon\" onClick={() => handleDone(todo.id)}>\n              <MdDone />\n            </span>\n          </div>\n        </form>\n      )}\n    </Draggable>\n  );\n};\n\nexport default SingleTodo;\n","import React from \"react\";\nimport { Todo } from \"../models/models\";\nimport SingleTodo from \"./SingleTodo\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\ninterface props {\n  todos: Array<Todo>;\n  setTodos: React.Dispatch<React.SetStateAction<Array<Todo>>>;\n  setCompletedTodos: React.Dispatch<React.SetStateAction<Array<Todo>>>;\n  completedTodos: Array<Todo>;\n}\n\nconst TodoList: React.FC<props> = ({\n  todos,\n  setTodos,\n  completedTodos,\n  setCompletedTodos,\n}) => {\n  return (\n    <div className=\"container\">\n      <Droppable droppableId=\"TodosList\">\n        {(provided, snapshot) => (\n          <div\n            className={`todos ${snapshot.isDraggingOver ? \"dragactive\" : \"\"}`}\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            <span className=\"todos__heading\">Todo</span>\n            {todos?.map((todo, index) => (\n              <SingleTodo\n                index={index}\n                todos={todos}\n                todo={todo}\n                key={todo.id}\n                setTodos={setTodos}\n              />\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n      <Droppable droppableId=\"TodosRemove\">\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            className={`todos  ${\n              snapshot.isDraggingOver ? \"dragcomplete\" : \"remove\"\n            }`}\n          >\n            <span className=\"todos__heading\">Completed Tasks</span>\n            {completedTodos?.map((todo, index) => (\n              <SingleTodo\n                index={index}\n                todos={completedTodos}\n                todo={todo}\n                key={todo.id}\n                setTodos={setCompletedTodos}\n              />\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from \"react\";\nimport \"./css/App.css\";\nimport InputField from \"./components/InputField\";\nimport TodoList from \"./components/TodoList\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { Todo } from \"./models/models\";\n\nconst App: React.FC = () => {\n  const [todo, setTodo] = useState<string>(\"\");\n  const [todos, setTodos] = useState<Array<Todo>>([]);\n  const [completedTodos, setCompletedTodos] = useState<Array<Todo>>([]);\n\n  const handleAdd = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (todo) {\n      setTodos([...todos, { id: Date.now(), todo, isDone: false }]);\n      setTodo(\"\");\n    }\n  };\n\n  const onDragEnd = (result: DropResult) => {\n    const { destination, source } = result;\n\n    console.log(result);\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    let add;\n    let active = todos;\n    let complete = completedTodos;\n    // Source Logic\n    if (source.droppableId === \"TodosList\") {\n      add = active[source.index];\n      active.splice(source.index, 1);\n    } else {\n      add = complete[source.index];\n      complete.splice(source.index, 1);\n    }\n\n    // Destination Logic\n    if (destination.droppableId === \"TodosList\") {\n      active.splice(destination.index, 0, add);\n    } else {\n      complete.splice(destination.index, 0, add);\n    }\n\n    setCompletedTodos(complete);\n    setTodos(active);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"App\">\n        <span className=\"heading\">Todo app</span>\n        <InputField todo={todo} setTodo={setTodo} handleAdd={handleAdd} />\n        <TodoList\n          todos={todos}\n          setTodos={setTodos}\n          completedTodos={completedTodos}\n          setCompletedTodos={setCompletedTodos}\n        />\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}